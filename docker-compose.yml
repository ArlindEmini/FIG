version: '3.3'

services:

  fig-db:
    container_name: mysql
    image: mysql:5.7.42-debian
    restart: unless-stopped
    tty: true
    env_file: ./.env
    environment:
      MYSQL_DATABASE: ${MYSQLDB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQLDB_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql   
    ports:
      - ${MYSQLDB_LOCAL_PORT}:${MYSQLDB_DOCKER_PORT}
    volumes:
      - ./database/data:/docker-entrypoint-initdb.d
      - mysql-db:/var/lib/mysql
    networks:
      - app-network
        
  fig-backend:
    container_name: fig-backend
    image: fig-backend:latest
    restart: always
    depends_on:
      - fig-db
    build: 
      context: ./service
      dockerfile: ./Dockerfile
    environment:
      PORT: ${NODE_DOCKER_PORT}
      SECRET_TOKEN: ${SECRET_TOKEN}
      # Database envs
      MYSQL_DATABASE: ${MYSQLDB_DATABASE}
      MYSQL_USER: ${MYSQLDB_USER}
      MYSQL_PASSWORD: ${MYSQLDB_ROOT_PASSWORD}
      MYSQL_HOST: ${MYSQLDB_HOST}
      MYSQL_LOCAL_PORT: ${MYSQLDB_LOCAL_PORT}
    ports:
      # Port forwarding
      # Port on Host : Port in Container
      - ${NODE_LOCAL_PORT}:${NODE_DOCKER_PORT}
    networks: 
      - app-network

# Docker Networks
networks:
  app-network:
    driver: bridge

# Names our volume
volumes:
  mysql-db:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /FIG/
      o: bind
        
